#BlueJ class context
comment0.target=Velocidad
comment0.text=\r\n\ @author\ Jose\ Luis\ Gomez\ Camacho\ \r\n\ @author\ Steven\ Nikolai\ Bermudez\ Vega\r\n\ @version\ 13/02/2019\r\n
comment1.params=l\ a
comment1.target=Velocidad(double,\ Angulo)
comment1.text=\r\n\ Constructor\ de\ la\ velocidad,\ en\ componentes\ polares\r\n\ @param\ l\ longitud\ de\ la\ velocidad\r\n\ @param\ a\ angulo\ de\ la\ velocidad\r\n
comment10.params=v
comment10.target=void\ reste(Velocidad)
comment10.text=\r\n\ Resta\ las\ velocidades\ dadas\r\n\ @param\ v\ Velocidad\r\n
comment11.params=operando
comment11.target=void\ escalar(int)
comment11.text=\r\n\ Realiza\ una\ multiplicacion\ escalar\ a\ la\ velocidad\r\n\ @param\ operando\ Int\r\n
comment12.params=v
comment12.target=void\ vectorial(Velocidad)
comment12.text=\r\n\ Realiza\ un\ producto\ vectorial\ con\ una\ velocidad\ dada\r\n\ @param\ v\ Velocidad\r\n
comment13.params=
comment13.target=java.lang.String\ toString()
comment13.text=\ \r\n\ Retorna\ una\ cadena\ que\ describe\ a\ este\ velocidad\ (en\ componentes\ polares)\r\n\ @return\ la\ informacion\ del\ objeto\r\n
comment2.params=
comment2.target=double\ componenteH()
comment2.text=\r\n\ Retorna\ el\ componente\ horizontal\r\n\ @return\ componente\ horizontal\ de\ la\ velocidad\r\n
comment3.params=
comment3.target=double\ componenteV()
comment3.text=\r\n\ Retorna\ el\ componente\ vertical\ de\ la\ velocidad\r\n\ @return\ \ componente\ vertical\ de\ la\ velocidad\r\n
comment4.params=
comment4.target=Angulo\ angulo()
comment4.text=\r\n\ Retorna\ el\ angulo\ de\ la\ velocidad\r\n\ @return\ angulo\ de\ la\ velocidad\r\n
comment5.params=
comment5.target=double\ longitud()
comment5.text=\r\n\ Retorna\ la\ longitud\ de\ la\ velocidad\r\n\ @return\ la\ longitud\ del\ origen\ al\ velocidad\r\n
comment6.params=v
comment6.target=boolean\ equals(Velocidad)
comment6.text=\r\n\ Compara\ a\ esta\ velocidad\ con\ otra,\ para\ ver\ si\ son\ iguales,\ \r\n\ teniendo\ en\ cuenta\ el\ margen\ de\ error\ MAXERROR,\ dado\ que\ se\ trabaja\ con\ punto\ flotante\r\n\ @param\ v\ Velocidad\ para\ compararse\r\n\ @return\ |this\ -\ a|\ <\ MAXERROR\r\n
comment7.params=o
comment7.target=boolean\ equals(java.lang.Object)
comment7.text=\r\n\ Compara\ a\ este\ velocidad\ con\ otra,\ para\ ver\ si\ son\ iguales,\ \r\n\ @param\ o\ objeto\ para\ compararse\r\n\ @return\ valor\ booleano\r\n
comment8.params=a
comment8.target=void\ rote(Angulo)
comment8.text=\r\n\ Rota\ el\ velocidad\ el\ angulo\ dado,\ con\ respecto\ al\ origen.\ \r\n\ Es\ decir\ que\ el\ angulo\ resultante,\ es\ la\ suma\ del\ angulo\ dado\ con\ el\ angulo\ inicial\ de\ la\ velocidad,\ \r\n\ y\ la\ distancia\ es\ la\ misma.\r\n\ @param\ a\ Angulo\ de\ la\ velocidad\r\n
comment9.params=v
comment9.target=void\ sume(Velocidad)
comment9.text=\r\n\ Suma\ las\ velocidades\ dadas\r\n\ @param\ v\ Velocidad\r\n
numComments=14
