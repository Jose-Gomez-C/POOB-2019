#BlueJ class context
comment0.target=Rectangle
comment0.text=\n\ A\ rectangle\ that\ can\ be\ manipulated\ and\ that\ draws\ itself\ on\ a\ canvas.\n\ \n\ @author\ \ Michael\ Kolling\ and\ David\ J.\ Barnes\ (Modified)\n\ @version\ 1.0\ \ (15\ July\ 2000)()\n
comment1.params=
comment1.target=Rectangle()
comment1.text=\n\ Create\ a\ new\ rectangle\ at\ default\ position\ with\ default\ color.\n
comment10.params=
comment10.target=void\ moveDown()
comment10.text=\n\ Move\ the\ rectangle\ a\ few\ pixels\ down.\n
comment11.params=distance
comment11.target=void\ moveHorizontal(int)
comment11.text=\n\ Move\ the\ rectangle\ horizontally.\n\ @param\ distance\ the\ desired\ distance\ in\ pixels\n
comment12.params=distance
comment12.target=void\ moveVertical(int)
comment12.text=\n\ Move\ the\ rectangle\ vertically.\n\ @param\ distance\ the\ desired\ distance\ in\ pixels\n
comment13.params=distance
comment13.target=void\ slowMoveHorizontal(int)
comment13.text=\n\ Slowly\ move\ the\ rectangle\ horizontally.\n\ @param\ distance\ the\ desired\ distance\ in\ pixels\n
comment14.params=distance
comment14.target=void\ slowMoveVertical(int)
comment14.text=\n\ Slowly\ move\ the\ rectangle\ vertically.\n\ @param\ distance\ the\ desired\ distance\ in\ pixels\n
comment15.params=newHeight\ newWidth
comment15.target=void\ changeSize(int,\ int)
comment15.text=\n\ Change\ the\ size\ to\ the\ new\ size\n\ @param\ newHeight\ the\ new\ height\ in\ pixels.\ newHeight\ must\ be\ >\=0.\n\ @param\ newWidht\ the\ new\ width\ in\ pixels.\ newWidth\ must\ be\ >\=0.\n
comment16.params=newColor
comment16.target=void\ changeColor(java.lang.String)
comment16.text=\n\ Change\ the\ color.\ \n\ @param\ color\ the\ new\ color.\ Valid\ colors\ are\ "red",\ "yellow",\ "blue",\ "green",\n\ "magenta"\ and\ "black".\n
comment17.params=
comment17.target=void\ draw()
comment17.text=\n\ Draw\ the\ rectangle\ with\ current\ specifications\ on\ screen.\n
comment18.params=
comment18.target=void\ erase()
comment18.text=\n\ Erase\ the\ rectangle\ on\ screen.\n
comment2.params=times
comment2.target=void\ blink(int)
comment2.text=\n\ La\ funcion\ blink\ recibe\ un\ numero\ de\ veces\ la\ cual\ debe\ parpadear\ \n\ el\ rectangulo\n
comment3.params=
comment3.target=int\ perimeter()
comment3.text=\n\ Metodo\ que\ no\ recibe\ ningun\ parametro\ retorna\ el\ perimetro\ de\ rectangle\n
comment4.params=
comment4.target=void\ turn()
comment4.text=\n\ Metodo\ que\ no\ recibe\ ningun\ parametro\ que\ gira\ 90\ grados\ a\ la\ derecha\ el\ objeto,\ que\ se\ mantiene\n\ en\ su\ posicion\n
comment5.params=
comment5.target=void\ makeVisible()
comment5.text=\n\ Make\ this\ rectangle\ visible.\ If\ it\ was\ already\ visible,\ do\ nothing.\n
comment6.params=
comment6.target=void\ makeInvisible()
comment6.text=\n\ Make\ this\ rectangle\ invisible.\ If\ it\ was\ already\ invisible,\ do\ nothing.\n
comment7.params=
comment7.target=void\ moveRight()
comment7.text=\n\ Move\ the\ rectangle\ a\ few\ pixels\ to\ the\ right.\n
comment8.params=
comment8.target=void\ moveLeft()
comment8.text=\n\ Move\ the\ rectangle\ a\ few\ pixels\ to\ the\ left.\n
comment9.params=
comment9.target=void\ moveUp()
comment9.text=\n\ Move\ the\ rectangle\ a\ few\ pixels\ up.\n
numComments=19
